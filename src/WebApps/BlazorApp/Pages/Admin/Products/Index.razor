@page "/admin/products"
@layout PanelLayout



@inject NavigationManager NavigationManager
@inject IProductService ProductService
@inject Radzen.DialogService DialogService

<h2>Products</h2>

<br />
<div class="row">
	<div class="col-2">
		<RadzenButton Text="AddProduct" Click=@AddProduct />
	</div>
</div>

<br />

<div class="row">
	<div class="col-10">
		<RadzenDataGrid Data="@_products.Result" TItem="AdminProductListDto">
			<Columns>

				@*<RadzenDataGridColumn Width="50px" TItem="AdminProductListDto" Title="#" TextAlign="TextAlign.Center">
					<Template Context="data">
						@(_products.Result.IndexOf(data) + 1)
					</Template>
				</RadzenDataGridColumn>*@

				<RadzenDataGridColumn TItem="AdminProductListDto" Title="Image" Frozen="true" Sortable="false" Filterable="false" Width="110px">
					<Template Context="data">
						<RadzenImage Path="@GetImage(data.ImageId)" style="width: 100px; height: 100px; border-radius: 8px;" />
					</Template>
				</RadzenDataGridColumn>

				<RadzenDataGridColumn Width="160px" TItem="AdminProductListDto" Property="Name" Title="Name" TextAlign="TextAlign.Center" />

				<RadzenDataGridColumn Width="160px" TItem="AdminProductListDto" Property="Quantity" Title="Quantity" TextAlign="TextAlign.Center" />

				<RadzenDataGridColumn Width="160px" TItem="AdminProductListDto" Property="Price" Title="Price" TextAlign="TextAlign.Center" />

				<RadzenDataGridColumn Width="160px" TItem="AdminProductListDto" Property="Id" Title="Operation" TextAlign="TextAlign.Center">
					<Template Context="data">
						<RadzenButton ButtonStyle="ButtonStyle.Info" Icon="info" Class="m-1" Text="Details" Click=@(args => OpenDetail(data.Id)) />
					</Template>
				</RadzenDataGridColumn>

			</Columns>
		</RadzenDataGrid>
	</div>
</div>

<div class="row">
	<div class="col-10">
		<RadzenPager Count="@_totalItems" PageSize="@parameter.PageSize" PageNumbersCount="5" PageChanged="@PageChanged" />

	</div>
</div>


@code {

	private PagedList<AdminProductListDto> _products = new PagedList<AdminProductListDto>();

	PageParameter parameter = new PageParameter()
		{
			PageIndex = 1,
			PageSize = 10
		};

	private int _totalItems { get; set; } = 0;

	private string GetImage(string id)
	{
		var imgUrl = "http://localhost:5020/products/api/Images/";
		return imgUrl + id;
	}

	protected override async Task OnInitializedAsync()
	{
		DialogService.OnOpen += Open;

		DialogService.OnClose += Close;

		_products = await ProductService.AdminGetAllAsync(parameter);
		_totalItems = (int)_products.TotalItems;
	}

	private async Task AddProduct()
	{
		await DialogService.OpenAsync<DailogAddProduct>(
				title: "Add Product",
				parameters: null,
				options:
						new DialogOptions() { Width = "700px", Height = "570px", Resizable = false, Draggable = false });
	}

	private async void PageChanged(PagerEventArgs args)
	{
		Console.WriteLine($"page Index{args.PageIndex}  {args.Skip} {args.Top}");
		parameter.PageIndex = args.PageIndex + 1;
		_products = await ProductService.AdminGetAllAsync(parameter);

		StateHasChanged();

	}

	private void OpenDetail(string id)
	{
		Console.WriteLine($"OpenDetail {id}");

		NavigationManager.NavigateTo($"admin/products/{id}");
	}

	void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
	{
		Console.WriteLine($"Dialog opened ");
	}

	void Close(dynamic result)
	{
		Console.WriteLine($"Dialog closed result:{result}");
	}
}