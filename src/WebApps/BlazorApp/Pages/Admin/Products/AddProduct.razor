@page "/admin/products/add"

@inject NavigationManager NavigationManager
@inject IProductService ProductService


<RadzenCard class="m-3">
	<h3 class="h5">AddProduct</h3>
	<div class="d-flex flex-row">

		<RadzenTemplateForm TItem="AdminAddProductDto" Data=@model Submit=@OnSubmit class="mb-3">

			<div class="mb-3">
				<InputFile Name="ProductName" OnChange="@LoadFiles" />
			</div>

			<div class="mb-3">
				<RadzenLabel Component="ProductName" Text="Product name" class="form-label" />
				<RadzenTextBox Name="ProductName" @bind-Value=@model.Name class="form-control" />
				<RadzenRequiredValidator Component="ProductName" Text="product name is required!" />
			</div>

			<div class="mb-3">
				<RadzenLabel Component="ProductPrice" Text="Product price" class="form-label" />
				<RadzenNumeric Name="ProductPrice" TValue="decimal" Placeholder="1.0" Step="0.5" Change=@(args => OnPriceChange(args)) class="form-control w-100" />
				<RadzenRequiredValidator Component="ProductPrice" Text="product price is required!" />
			</div>

			<div class="mb-3">
				<RadzenLabel Component="ProductQuantity" Text="Product Quantity" class="form-label" />
				<RadzenNumeric Name="ProductQuantity" TValue="int" Placeholder="1" Step="1" Change=@(args => OnQuantityChange(args)) class="form-control w-100" />
				<RadzenRequiredValidator Component="ProductQuantity" Text="product Quantity is required!" />
			</div>

			<div class="mb-3">
				<RadzenButton ButtonType="ButtonType.Submit" Text="Save" />
			</div>

		</RadzenTemplateForm>

	</div>
</RadzenCard>

@code {

	private AdminAddProductDto model = new AdminAddProductDto();
	string Photo = "";

	protected override void OnInitialized()
	{
		model.Price = 1;
		model.Quantity = 1;

		base.OnInitialized();
	}

	private  async Task OnSubmit()
	{
		var res = await ProductService.AdminAddProduct(model);   

		Console.WriteLine($"uploadImage: code:{res.Code} id:{res.Id} msg:{res.Msg}");

		if (res.Code == 200 && res.Id != null)
			NavigationManager.NavigateTo("admin/products");

	}

	private void OnChange(string value)
	{
		Console.WriteLine($"Value changed to {value}");
	}

	private async Task LoadFiles(InputFileChangeEventArgs e)
	{
		// send file to server an return imageId
		UploadToServer(e.File);


		var res = await ProductService.AdminAddImage(e.File);

		Console.WriteLine($"uploadImage: code:{res.Code} id:{res.Id} msg:{res.Msg}");

		if (res.Code == 200 && res.Id != null)
			model.ImageId = res.Id;

	}

	private void UploadToServer(IBrowserFile file)
	{
		var id = Guid.NewGuid().ToString();

		model.ImageId = id;
	}

	private void OnPriceChange(decimal value)
	{
		model.Price = value;
	}

	private void OnQuantityChange(int value)
	{
		model.Quantity = value;
	}
}