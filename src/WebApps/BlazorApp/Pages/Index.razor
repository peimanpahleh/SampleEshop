@page "/"

@inject IProductService ProductService
@inject IBasketService BasketService
@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>Index</PageTitle>

<header class="header shop">

	<!-- Topbar -->
	<div class="topbar">
		<div class="container">
			<div class="row">
				<div class="col-lg-5 col-md-12 col-12">
					<!-- Top Left -->
					<div class="top-left">
						<ul class="list-main">
							<li><i class="ti-headphone-alt"></i> +060 (800) 801-582</li>
							<li><i class="ti-email"></i> support@shophub.com</li>
						</ul>
					</div>
					<!--/ End Top Left -->
				</div>
				<div class="col-lg-7 col-md-12 col-12">
					<!-- Top Right -->
					<div class="right-content">
						<ul class="list-main">
							<li><i class="ti-location-pin"></i> Store location</li>
							<li><i class="ti-alarm-clock"></i> <a href="#">Daily deal</a></li>
							<li><i class="ti-user"></i> <a href="#">My account</a></li>

							<AuthorizeView>
								<Authorized>
									Hello, @context.User.Identity?.Name!
									<button class="nav-link btn btn-link" style="width: 120px;height: 45px;" @onclick="BeginSignOut">Log out</button>
								</Authorized>
								<NotAuthorized>
									<li><i class="ti-power-off"></i><a href="authentication/login">Login</a></li>
								</NotAuthorized>
							</AuthorizeView>

						</ul>
					</div>
					<!-- End Top Right -->
				</div>
			</div>
		</div>
	</div>
	<!-- End Topbar -->
	<!-- End Topbar -->
	<div class="middle-inner">
		<div class="container">
			<div class="row">
				<div class="col-lg-2 col-md-2 col-12">
					<!-- Logo -->
					<div class="logo">
						<a href="index.html"><img src="template/images/logo.png" alt="logo"></a>
					</div>
					<!--/ End Logo -->
					<!-- Search Form -->
					<div class="search-top">
						<div class="top-search"><a href="#0"><i class="ti-search"></i></a></div>
						<!-- Search Form -->
						<div class="search-top">
							<form class="search-form">
								<input type="text" placeholder="Search here..." name="search">
								<button value="search" type="submit"><i class="ti-search"></i></button>
							</form>
						</div>
						<!--/ End Search Form -->
					</div>
					<!--/ End Search Form -->
					<div class="mobile-nav"></div>
				</div>
				<div class="col-lg-8 col-md-7 col-12">
					<div class="search-bar-top">
						<div class="search-bar">
							<select style="display: none;">
								<option selected="selected">All Category</option>
								<option>watch</option>
								<option>mobile</option>
								<option>kid’s item</option>
							</select><div class="nice-select" tabindex="0"><span class="current">All Category</span><ul class="list"><li data-value="All Category" class="option selected focus">All Category</li><li data-value="watch" class="option">watch</li><li data-value="mobile" class="option">mobile</li><li data-value="kid’s item" class="option">kid’s item</li></ul></div>
							<form>
								<input name="search" placeholder="Search Products Here....." type="search">
								<button class="btnn"><i class="ti-search"></i></button>
							</form>
						</div>
					</div>
				</div>
				<div class="col-lg-2 col-md-3 col-12">
					<div class="right-bar">
						<!-- Search Form -->
						<div class="sinlge-bar">
							<a href="#" class="single-icon"><i class="fa fa-heart-o" aria-hidden="true"></i></a>
						</div>
						<div class="sinlge-bar">
							<a href="#" class="single-icon"><i class="fa fa-user-circle-o" aria-hidden="true"></i></a>
						</div>
						<AuthorizeView>
							<Authorized>
								<div class="sinlge-bar shopping">
									<a href="#" class="single-icon"><i class="ti-bag"></i> <span class="total-count">@_basket.BasketItems.Count</span></a>
									<!-- Shopping Item -->
									<div class="shopping-item">
										<div class="dropdown-cart-header">
											<span>@_basket.BasketItems.Count Items</span>
											<a href="cart">View Cart</a>
										</div>
										<ul class="shopping-list">
											@foreach (var item in _basket.BasketItems)
											{
												<li>
													<a href="#" class="remove" title="Remove this item" @onclick="() => RemoveFromBasket(item.Id)"><i class="fa fa-remove"></i></a>
													<a class="cart-img" href="#"><img src="@GetImage(item.ImageId)" alt="#"></a>
													<h4><a href="#">@item.ProductName</a></h4>
													<p class="quantity">@item.Quantity x - <span class="amount">$@item.UnitPrice</span></p>
												</li>
											}
										</ul>
										<div class="bottom">
											<div class="total">
												<span>Total</span>
												<span class="total-amount">$@GetBasketTotal()</span>
											</div>
											<a href="checkout" class="btn animate">Checkout</a>
										</div>
									</div>
									<!--/ End Shopping Item -->
								</div>
							</Authorized>
						</AuthorizeView>

					</div>
				</div>
			</div>
		</div>
	</div>

</header>

<!-- Slider Area -->
<section class="hero-slider">
</section>
<!--/ End Slider Area -->
<!-- Start Product Area -->
<div class="product-area section pt-2">
	<div class="container">
		<div class="row">
			<div class="col-12">
				<div class="section-title">
					<h2>Trending Item</h2>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-12">
				<div class="product-info">
					<div class="tab-content" id="myTabContent">
						<!-- Start Single Tab -->
						<div class="tab-pane fade show active" role="tabpanel">
							<div class="tab-single">
								<div class="row">
									@foreach (var item in _products.Result)
									{
										<div class="col-xl-3 col-lg-4 col-md-4 col-12">
											<div class="single-product">
												<div class="product-img">
													<a href="product-details.html">
														<img class="default-img" src="@GetImage(item.ImageId)" alt="#">
													</a>
													<div class="button-head">
														<div class="product-action">
															<a data-toggle="modal" data-target="#exampleModal" title="Quick View" href="#"><i class=" ti-eye"></i><span>Quick Shop</span></a>
															<a title="Wishlist" href="#"><i class=" ti-heart "></i><span>Add to Wishlist</span></a>
															<a title="Compare" href="#"><i class="ti-bar-chart-alt"></i><span>Add to Compare</span></a>
														</div>
														<div class="product-action-2">
															<div class="button">
																<a title="Add to cart" href="#" @onclick="() => AddToCart(item.Id)">Add to cart</a>
															</div>
														</div>
													</div>
												</div>
												<div class="product-content">
													<h3><a href="product-details.html">@item.Name</a></h3>
													<div class="product-price">
														<span>$@item.Price</span>
													</div>
												</div>
											</div>
										</div>
									}
								</div>
							</div>
						</div>
						<!--/ End Single Tab -->
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- End Product Area -->
@code {

	private PagedList<ProductListDto> _products = new PagedList<ProductListDto>();

	private PageParameter parameter = new PageParameter()
		{
			PageIndex = 1,
			PageSize = 10
		};

	private int _totalItems { get; set; } = 0;

	private string GetImage(string id)
	{
		var imgUrl = "http://localhost:5020/products/api/Images/";
		return imgUrl + id;
	}

	private BasketDto _basket = new();


	protected override async Task OnInitializedAsync()
	{
		_products = await ProductService.GetAllAsync(parameter);

		_totalItems = (int)_products.TotalItems;

		var isAuthenticated = await CheckAuth();

		Console.WriteLine($"isAuthenticated:{isAuthenticated}");

		if (isAuthenticated)
		{
			_basket = await BasketService.GetBasketAsync();
		}
	}

	private async Task<bool> CheckAuth()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;

		if (user == null)
			return false;

		if (user.Identity.IsAuthenticated)
			return true;

		return false;
	}

	private async void PageChanged(PagerEventArgs args)
	{
		Console.WriteLine($"page Index{args.PageIndex}  {args.Skip} {args.Top}");
		parameter.PageIndex = args.PageIndex + 1;
		_products = await ProductService.GetAllAsync(parameter);

		StateHasChanged();

	}

	private async Task AddToCart(string id)
	{
		Console.WriteLine($"product {id} added");

		var isAuthenticated = await CheckAuth();
		if (isAuthenticated)
		{
			await BasketService.GetBasketAsync();
		}

		var items = new UpdateBasketModel(new List<BasketItemModel>()
		{
			new BasketItemModel(id,1)
		});

		var res = await BasketService.UpdateBasketAsync(items);

		if (res.Code == 200)

			_basket = await BasketService.GetBasketAsync();
		StateHasChanged();

	}

	private long GetBasketTotal()
	{
		return _basket.BasketItems.Sum(x => (long)x.UnitPrice);
	}

	private async Task RemoveFromBasket(string id)
	{
		var res = await BasketService.DeleteBasketItemAsync(id);
		Console.WriteLine($"res delete is:{res}");
		if (res)
		{
			_basket = await BasketService.GetBasketAsync();
			StateHasChanged();
		}
	}

	private async Task BeginSignOut(MouseEventArgs args)
	{
		await SignOutManager.SetSignOutState();
		Navigation.NavigateTo("authentication/logout");
	}

}